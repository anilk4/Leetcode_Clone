{
    "testcase": {
      "cpp": {
        "initial_code": "int main() {\n    std::vector<std::vector<int>> array = {{2, 7, 11, 15}, {3, 2, 4}, {3, 3}};\n    std::vector<int> target = {9, 6, 6};\n\n    std::vector<std::vector<int>> finalOutput(3);\n\n    for (int i = 0; i < array.size(); ++i) {\n        std::vector<int> result = Solution::twoSum(array[i], target[i]);\n        finalOutput[i] = result;\n    }\n\n    for (const auto& result : finalOutput) {\n        std::cout << \"[\";\n        for (int i = 0; i < result.size(); ++i) {\n            std::cout << result[i];\n            if (i < result.size() - 1) {\n                std::cout << \", \";\n            }\n        }\n        std::cout << \"]\" << std::endl;\n    }\n\n    return 0;\n}",
        "user_code": "#include <iostream>\n#include <vector>\n#include <unordered_map>\n\nclass Solution {\npublic:\n\n    static std::vector<int> twoSum(std::vector<int>& nums, int target) {\n        // Your code here\n    }\n};"
      },
      "java": {
        "initial_code": "class Main {\n\n    public static void main(String[] args) {\n\t    \n        int[][] array = {{2, 7, 11, 15}, {3, 2, 4}, {3, 3}};\n        int[] target = {9, 6, 6};\n        \n        int[][] finalOutput = new int[3][];\n        \n        for (int i = 0; i < array.length; i++) {\n            int[] result = Solution.twoSum(array[i], target[i]);\n            finalOutput[i] = result;\n        }\n        \n        System.out.println(Arrays.deepToString(finalOutput));\n    }\n}",
        "user_code": "import java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass Solution\n{\n    //Function to find a continuous sub-array which adds up to a given number.\n    public static int[] twoSum(int[] nums, int target) \n    {\n        // Your code here\n    }\n}"
      },
      "py": {
        "initial_code": "array = [[2, 7, 11, 15], [3, 2, 4], [3, 3]]\ntarget = [9, 6, 6]\n\nfinal_output = []\n\nfor i in range(len(array)):\n    result = two_sum(array[i], target[i])\n    final_output.append(result)\n\nprint(final_output)",
        "user_code": "def two_sum(nums, target):"
      },
      "js": {
        "initial_code": "const array = [[2, 7, 11, 15], [3, 2, 4], [3, 3]];\nconst target = [9, 6, 6];\n\nconst finalOutput = [];\n\nfor (let i = 0; i < array.length; i++) {\n    const result = Solution.twoSum(array[i], target[i]);\n    finalOutput.push(result);\n}\n\nconsole.log(finalOutput);",
        "user_code": "class Solution {\n    // Function to find a continuous sub-array which adds up to a given number.\n    static twoSum(nums, target) {\n        // Your code here\n    }\n}"
      },
      "output": [
        [0, 1],
        [1, 2],
        [0, 1]
      ]
    }
  }
  